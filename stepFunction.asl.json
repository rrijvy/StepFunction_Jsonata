{
    "Comment": "Document Processing Workflow with JSONata",
    "StartAt": "ClassifyDocument",
    "States": {
        "ClassifyDocument": {
            "Type": "Task",
            "Resource": "${DocumentClassifierArn}",
            "Next": "CheckClassification",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "ClassificationFailed"
                }
            ],
            "Comment": "Invokes DocumentClassifier Lambda to classify the document",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "id": "{% $states.input.documentId %}",
                "key": "{% $states.input.s3Key %}"
            },
            "Output": {
                "documentType": "{% $states.result.classificationResult.documentType %}",
                "confidence": "{% $states.result.classificationResult.confidence %}",
                "needManualReview": "{% $states.result.needManualReview %}"
            },
            "Assign": {
                "documentType": "{% $states.result.classificationResult.documentType %}",
                "confidence": "{% $states.result.classificationResult.confidence %}"
            }
        },
        "CheckClassification": {
            "Type": "Choice",
            "Default": "TransformForExtraction",
            "Choices": [
                {
                    "Condition": "{% ($type($documentType) = \"null\" or ($confidence) < (0.7)) %}",
                    "Next": "ClassificationFailed"
                },
                {
                    "Condition": "{% ($needManualReview) = (true) %}",
                    "Next": "ManualReview"
                }
            ],
            "QueryLanguage": "JSONata"
        },
        "TransformForExtraction": {
            "Type": "Pass",
            "Next": "ExtractDocumentData",
            "QueryLanguage": "JSONata"
        },
        "ExtractDocumentData": {
            "Type": "Task",
            "Resource": "${DataExtractorArn}",
            "InputPath": "$.extractionInput",
            "ResultPath": "$.extractionResult",
            "Next": "ProcessExtractedData",
            "Comment": "Invokes DataExtractor Lambda to extract data from the document"
        },
        "ProcessExtractedData": {
            "Type": "Task",
            "Resource": "${BusinessActionArn}",
            "Parameters": {
                "actionType.$": "$.extractionInput.documentType = 'INVOICE' ? 'processPayment' : 'createOrder'",
                "extractedData.$": "$.extractionResult.extractedData",
                "documentId.$": "$.document.id",
                "QueryLanguage": "JSONata",
                "Query": "{'action': documentType = 'INVOICE' ? 'processPayment' : 'createOrder', 'payload': data}"
            },
            "End": true,
            "Comment": "Invokes Processor Lambda to perform business action based on document type"
        },
        "ManualReview": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "Parameters": {
                "TopicArn": "${ManualReviewTopicArn}",
                "Message.$": "$.document.key"
            },
            "End": true
        },
        "ClassificationFailed": {
            "Type": "Fail",
            "Error": "ClassificationError",
            "Cause": "Unable to classify document",
            "QueryLanguage": "JSONata"
        }
    }
}