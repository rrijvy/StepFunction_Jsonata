{
    "Comment": "Document Processing Workflow with JSONata",
    "StartAt": "ClassifyDocument",
    "States": {
        "ClassifyDocument": {
            "Type": "Task",
            "Resource": "${DocumentClassifierArn}",
            "Next": "CheckClassification",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "ClassificationFailed"
                }
            ],
            "Comment": "Invokes DocumentClassifier Lambda to classify the document",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "id": "{% $states.input.documentId %}",
                "s3Key": "{% $states.input.s3Key %}"
            },
            "Output": {
                "documentType": "{% $states.result.classificationResult.documentType %}",
                "confidence": "{% $states.result.classificationResult.confidence %}",
                "needManualReview": "{% $states.result.needManualReview %}"
            },
            "Assign": {
                "documentType": "{% $states.result.classificationResult.documentType %}",
                "confidence": "{% $states.result.classificationResult.confidence %}",
                "s3Key": "{% $states.input.s3Key %}",
                "needManualReview": "{% $states.result.needManualReview %}"
            }
        },
        "CheckClassification": {
            "Type": "Choice",
            "Default": "GetConfig",
            "Choices": [
                {
                    "Condition": "{% ($type($documentType) = \"null\" or ($confidence) < (0.7)) %}",
                    "Next": "ClassificationFailed"
                },
                {
                    "Condition": "{% ($needManualReview) = (true) %}",
                    "Next": "ManualReview"
                }
            ],
            "QueryLanguage": "JSONata"
        },
        "GetConfig": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:getItem",
            "Next": "ExtractDocumentData",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "TableName": "{% '${PrimaryTableName}' %}",
                "Key": {
                    "p1stonId": {
                        "S": "{% 'CONFIG:LIST' %}"
                    },
                    "p1stonType": {
                        "S": "{% 'SETTINGS:' & $uppercase($documentType) %}"
                    }
                }
            },
            "Assign": {
                "config": "{% $merge($keys($states.result.Item).{$: $lookup($states.result.Item, $).S}) %}"
            }            
        },
        "ExtractDocumentData": {
            "Type": "Task",
            "Resource": "${DataExtractorArn}",
            "Next": "ProcessExtractedData",
            "Comment": "Invokes DataExtractor Lambda to extract data from the document",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "config": "{% $config %}",
                "documentType": "{% $documentType %}",
                "s3Key": "{% $s3Key %}"
            },
            "Output": {
                "extractedData": "{% $states.result.extractedData %}"
            },
            "Assign": {
                "extractedData": "{% $states.result.extractedData %}"
            }
        },
        "ProcessExtractedData": {
            "Type": "Task",
            "Resource": "${BusinessActionArn}",
            "End": true,
            "Comment": "Invokes Processor Lambda to perform business action based on document type",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "extractedData": "{% $extractedData %}"
            },
            "Output": {
                "status": "{%$states.result.status  %}"
            },
            "Assign": {
                "status": "{%$states.result.status  %}"
            }
        },
        "ManualReview": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "End": true,
            "QueryLanguage": "JSONata",
            "Arguments": {
                "TopicArn": "arn:aws:sns::123456789012:topic:mytopic",
                "Message": {
                    "documentType": "{% $documentType %}",
                    "confidence": "{% $confidence %}",
                    "s3Key": "{% $s3Key %}"
                }
            },
            "Output": {
                "snsPublished": "{% $states.result.status %}"
            },
            "Assign": {
                "snsPublished": "{% $states.result.status %}"
            }
        },
        "ClassificationFailed": {
            "Type": "Fail",
            "Error": "ClassificationError",
            "Cause": "Unable to classify document",
            "QueryLanguage": "JSONata"
        }
    }
}